# Generated by Django 3.2.25 on 2025-05-15 07:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('warehouse', '0010_purchaseorder_created_at'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('inventory', '0007_remove_product_supplier'),
    ]

    operations = [
        migrations.CreateModel(
            name='StockTakeSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Full Stock Take - 2025-05-15 - Main Warehouse', max_length=255)),
                ('initiated_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Timestamp when the stock take session was created/initiated.')),
                ('completed_by_operator_at', models.DateTimeField(blank=True, help_text='Timestamp when the warehouse operator marked their counting as complete.', null=True)),
                ('evaluated_at', models.DateTimeField(blank=True, help_text='Timestamp when the stock take was evaluated.', null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Operator Input'), ('COMPLETED_BY_OPERATOR', 'Completed by Operator'), ('EVALUATED', 'Evaluated by Superuser'), ('CLOSED', 'Closed/Archived')], default='PENDING', help_text='Current status of the stock take session.', max_length=30)),
                ('notes', models.TextField(blank=True, help_text='General notes for this stock take session.')),
                ('evaluated_by', models.ForeignKey(blank=True, help_text='Superuser who evaluated this stock take.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_takes_evaluated', to=settings.AUTH_USER_MODEL)),
                ('initiated_by', models.ForeignKey(blank=True, help_text='User who started or is responsible for this stock take session.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_takes_initiated', to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(help_text='The warehouse where the stock take was performed.', on_delete=django.db.models.deletion.PROTECT, to='warehouse.warehouse')),
            ],
            options={
                'verbose_name': 'Stock Take Session',
                'verbose_name_plural': 'Stock Take Sessions',
                'ordering': ['-initiated_at'],
            },
        ),
        migrations.CreateModel(
            name='StockTakeItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_label_counted', models.CharField(blank=True, help_text='The physical location label where the item was found and counted (e.g., A01-R2-S3).', max_length=50, null=True)),
                ('batch_number_counted', models.CharField(blank=True, help_text='The batch number observed on the physical product.', max_length=100, null=True)),
                ('expiry_date_counted', models.DateField(blank=True, help_text='The expiry date observed on the physical product.', null=True)),
                ('counted_quantity', models.PositiveIntegerField(help_text='The quantity of this item physically counted at this location/batch/expiry.')),
                ('counted_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Timestamp when this specific item was counted/entered.')),
                ('notes', models.TextField(blank=True, help_text='Optional notes specific to this counted item.')),
                ('session', models.ForeignKey(help_text='The stock take session this item belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.stocktakesession')),
                ('warehouse_product', models.ForeignKey(help_text="The system's Warehouse Product record this count refers to.", on_delete=django.db.models.deletion.PROTECT, to='warehouse.warehouseproduct')),
            ],
            options={
                'verbose_name': 'Stock Take Item',
                'verbose_name_plural': 'Stock Take Items',
                'ordering': ['session', 'warehouse_product__product__name', 'location_label_counted', 'batch_number_counted'],
            },
        ),
    ]
